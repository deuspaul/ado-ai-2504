trigger:
  - main
  - feature/*

pool: 'ado-ai2504'

stages:
- stage: Build
  jobs:
  - job: BuildAndTest
    steps:
    #- task: UsePythonVersion@0
    #  inputs:
    #    versionSpec: '3.x'
    #    addToPath: true

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install dependencies'

    - script: |
        python -m pytest --cov=src --cov-report=xml --cov-report=html --junitxml=test-results.xml
      displayName: 'Run tests with coverage'
      continueOnError: true

    - task: PublishTestResults@2
      inputs:
        testResultsFiles: 'test-results.xml'
        testRunTitle: 'Python Tests'
      condition: succeededOrFailed()

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: 'coverage.xml'
        reportDirectory: 'htmlcov'

    - script: |
        bandit -r . -f json -o bandit-results.json --exclude './tests,**/test_*.py'
      displayName: 'Run Bandit Security Scan'
      continueOnError: true

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: 'bandit-results.json'
        artifactName: 'SecurityScanResults'

    - script: |
        mkdir -p $HOME/.local/bin
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b $HOME/.local/bin
        export PATH=$HOME/.local/bin:$PATH
        trivy fs --format json --output trivy-results.json .
      displayName: 'Run Trivy Dependency Scan'
      continueOnError: true

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: 'trivy-results.json'
        artifactName: 'DependencyScanResults'